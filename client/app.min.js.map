{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","template","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","console","log","profileCtrl","meanData","vm","this","user","getProfile","success","data","error","e","$inject","loginCtrl","credentials","email","password","onSubmit","login","err","alert","JSON","stringify","then","logoutCtrl","logout","registerCtrl","name","register","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","parse","exp","Date","now","currentUser","post","headers","Authorization","removeItem","service","get","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/logout', {\n        template: '',\n        controller: 'logoutCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(JSON.stringify(err));\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('logoutCtrl', logoutCtrl);\n\n  logoutCtrl.$inject = ['$location', 'authentication'];\n  function logoutCtrl($location, authentication) {\n    var vm = this;\n    authentication\n      .logout()\n      .error(function(err){\n        alert(JSON.stringify(err));\n      })\n      .then(function(){\n        $location.path('');\n      });\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(JSON.stringify(err));\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function () {\n      var token = getToken();\n      var payload;\n\n      if (token) {\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function () {\n      if (isLoggedIn()) {\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email: payload.email,\n          name: payload.name\n        };\n      }\n    };\n\n    register = function (user) {\n      return $http.post('/api/v1/users/signup', user).success(function (data) {\n        saveToken(data.token);\n      });\n    };\n\n    login = function (user) {\n      return $http.post('/api/v1/users/signin', user).success(function (data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function () {\n      if (isLoggedIn()) {\n        return $http.post('/api/v1/users/logout', {}, {\n          headers: {\n            Authorization: getToken()\n          }\n        }).success(function () {\n          $window.localStorage.removeItem('mean-token');\n        });\n      } else {\n        return false;\n      }\n    };\n\n    return {\n      currentUser: currentUser,\n      saveToken: saveToken,\n      getToken: getToken,\n      isLoggedIn: isLoggedIn,\n      register: register,\n      login: login,\n      logout: logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/v1/users/profile', {\n        headers: {\n          Authorization: authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}